version: "3.9"
services:
  invest-igator:
    image: docker.io/mrdeathrider/invest-igator:latest
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-investigator}
      AUTH_TRUST_HOST: "true"
      NODE_ENV: production
      # Keep this true until all envs are properly set
      SKIP_ENV_VALIDATION: "1"
      # IMPORTANT: do NOT override INFLUXDB_URL here; it comes from .env and points to your external Influx
      # Ofelia will exec the ingest inside this container on a cron schedule
    labels:
      ofelia.enabled: "true"
      # Run daily at 02:15 UTC (same as previous GH Actions cron)
      ofelia.job-exec.ingest-yahoo.schedule: 15 2 * * *
      ofelia.job-exec.ingest-yahoo.command: bun run src/server/jobs/ingest-yahoo.ts
      ofelia.job-exec.ingest-yahoo.no-overlap: "true"
      # Run FX ingest twice daily at 06:00 and 18:00 UTC
      ofelia.job-exec.ingest-fx.schedule: 0 6,18 * * *
      ofelia.job-exec.ingest-fx.command: bun run src/server/jobs/ingest-fx.ts
      ofelia.job-exec.ingest-fx.no-overlap: "true"
    ports:
      - 3311:3000
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
  # Internal Postgres (keep if you don't already have an external DB)
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-investigator}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER:-postgres} -d
          ${POSTGRES_DB:-investigator}
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  # Scheduler service to run jobs inside containers using labels above
  scheduler:
    image: mcuadros/ofelia:latest
    command: daemon --docker
    depends_on:
      invest-igator:
        condition: service_started
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
volumes:
  pgdata: null
networks: {}
